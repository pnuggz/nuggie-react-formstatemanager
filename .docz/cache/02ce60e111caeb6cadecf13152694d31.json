{"remainingRequest":"G:\\AppTute\\nuggie-react-useform\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!G:\\AppTute\\nuggie-react-useform\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!G:\\AppTute\\nuggie-react-useform\\node_modules\\source-map-loader\\index.js!G:\\AppTute\\nuggie-react-useform\\src\\useForm.js","dependencies":[{"path":"G:\\AppTute\\nuggie-react-useform\\src\\useForm.js","mtime":1574415969564},{"path":"G:\\AppTute\\nuggie-react-useform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\AppTute\\nuggie-react-useform\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\AppTute\\nuggie-react-useform\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\AppTute\\nuggie-react-useform\\node_modules\\source-map-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["G:/AppTute/nuggie-react-useform/src/useForm.js"],"names":["useState","useEffect","useCallback","PropTypes","propTypes","stateSchema","object","isRequired","validationSchema","callback","func","defaultProps","UseForm","props","state","setState","disable","setDisable","isDirty","setIsDirty","validateState","hasErrorInState","Object","keys","some","key","isInputFieldRequired","required","stateValue","value","stateError","error","handleOnChange","event","name","target","substr","toUpperCase","validator","regEx","test","prevState","handleOnSubmit","preventDefault","handlePasswordShow","previousSibling","type"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const propTypes = {\r\n  stateSchema: PropTypes.object.isRequired,\r\n  validationSchema: PropTypes.object,\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport const defaultProps = {\r\n  validationSchema: {},\r\n  callback: null,\r\n};\r\n\r\nconst UseForm = props => {\r\n  const { stateSchema, validationSchema, callback } = props;\r\n\r\n  const [state, setState] = useState(stateSchema);\r\n  const [disable, setDisable] = useState(true);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  // Disable button in initial render.\r\n  useEffect(() => {\r\n    setDisable(true);\r\n  }, []);\r\n\r\n  // For every changed in our state this will be fired\r\n  // To be able to disable the button\r\n  useEffect(() => {\r\n    if (isDirty) {\r\n      setDisable(validateState());\r\n    }\r\n  }, [state, isDirty]);\r\n\r\n  // Used to disable submit button if there's an error in state\r\n  // or the required field in state has no value.\r\n  // Wrapped in useCallback to cached the function to avoid intensive memory leaked\r\n  // in every re-render in component\r\n  const validateState = useCallback(() => {\r\n    const hasErrorInState = Object.keys(validationSchema).some(key => {\r\n      const isInputFieldRequired = validationSchema[key].required;\r\n      const stateValue = state[key].value; // state value\r\n      const stateError = state[key].error; // state error\r\n\r\n      return (isInputFieldRequired && !stateValue) || stateError;\r\n    });\r\n\r\n    return hasErrorInState;\r\n  }, [state, validationSchema]);\r\n\r\n  // Used to handle every changes in every input\r\n  const handleOnChange = useCallback(\r\n    event => {\r\n      setIsDirty(true);\r\n\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n\r\n      let error = '';\r\n      if (validationSchema[name].required) {\r\n        if (!value) {\r\n          error = `${name.substr(0, 1).toUpperCase() + name.substr(1)} field is required.`;\r\n        }\r\n      }\r\n\r\n      if (\r\n        validationSchema[name].validator !== null &&\r\n        typeof validationSchema[name].validator === 'object'\r\n      ) {\r\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\r\n          error = validationSchema[name].validator.error;\r\n        }\r\n      }\r\n\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        [name]: { value, error },\r\n      }));\r\n    },\r\n    [validationSchema],\r\n  );\r\n\r\n  const handleOnSubmit = useCallback(\r\n    event => {\r\n      event.preventDefault();\r\n\r\n      // Make sure that validateState returns false\r\n      // Before calling the submit callback function\r\n      if (!validateState()) {\r\n        callback(state);\r\n      }\r\n    },\r\n    [state],\r\n  );\r\n\r\n  const handlePasswordShow = useCallback(\r\n    event => {\r\n      const name = event.target.previousSibling.name;\r\n      const type = event.target.previousSibling.type;\r\n\r\n      if (name !== 'password') {\r\n        return;\r\n      }\r\n\r\n      if (type === 'password') {\r\n        event.target.previousSibling.type = 'text';\r\n        return;\r\n      }\r\n\r\n      event.target.previousSibling.type = 'password';\r\n    },\r\n    [state],\r\n  );\r\n\r\n  return { state, handleOnChange, handleOnSubmit, handlePasswordShow, disable };\r\n};\r\n\r\nUseForm.propTypes = propTypes;\r\nUseForm.defaultProps = defaultProps;\r\n\r\nexport default UseForm;\r\n"]}]}